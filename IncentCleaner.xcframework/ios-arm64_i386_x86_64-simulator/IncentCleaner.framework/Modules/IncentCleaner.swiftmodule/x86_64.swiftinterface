// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target x86_64-apple-ios9.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name IncentCleaner
import Foundation
@_exported import IncentCleaner
import Swift
public enum BlockType : Swift.Int {
  case initial
  case pre
  case common
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
public var isIncent: Swift.Bool {
  get
}
public var showDebug: Swift.Bool
public var log: ((Swift.String) -> Swift.Void)?
public func activate()
public func checkForIncenting(completion: @escaping (Swift.Bool) -> Swift.Void)
public func doIfNonIncent(type: IncentCleaner.BlockType = .common, desc: Swift.String? = nil, block: @escaping () -> Swift.Void)
extension IncentCleaner.BlockType : Swift.Equatable {}
extension IncentCleaner.BlockType : Swift.Hashable {}
extension IncentCleaner.BlockType : Swift.RawRepresentable {}
